{"version":3,"sources":["openWeatherMap.jsx"],"names":[],"mappings":";;;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;;;;AAIA,IAAM,UAAU,kCAAhB;AACA,IAAM,QAAQ,QAAd;AACA,IAAM,uBAAuB,oDACzB,QADyB,GACd,OADc,GACJ,GADI,GAEzB,QAFyB,GAEd,KAFf;;AAIA,OAAO,OAAP,GAAiB;AACb,oBAAgB,wBAAU,QAAV,EAAoB;;AAEhC,YAAI,kBAAkB,mBAAmB,QAAnB,CAAtB;;;AAGA,YAAI,aAAgB,oBAAhB,WAA0C,eAA9C;;;AAGA,eAAO,MAAM,GAAN,CAAU,UAAV,EAAsB,IAAtB,CACH,UAAU,QAAV,EAAoB;;;AAGhB,gBAAI,SAAS,IAAT,CAAc,GAAd,IAAqB,SAAS,IAAT,CAAc,OAAvC,EAAgD;;AAE5C,sBAAM,IAAI,KAAJ,CAAU,0CAA0C,SAAS,IAAT,CAAc,OAAlE,CAAN;AACH,aAHD,MAGO;;AAEH,uBAAO,SAAS,IAAT,CAAc,IAAd,CAAmB,IAA1B;AACH;AACJ,SAXE,EAYH,UAAU,QAAV,EAAoB;;;AAGhB,kBAAM,IAAI,KAAJ,CAAU,oBAAoB,QAA9B,CAAN;AACH,SAhBE,CAAP;AAkBH;AA3BY,CAAjB","file":"openWeatherMap.js","sourcesContent":["// Modules for promise based HTTP client\r\nvar axios = require('axios');\r\n\r\n// Generate template\r\n// SCREAMING_SNAKE_CASE\r\nconst API_KEY = 'e6f9c8ca47f55629067d7ff1b6840fc9';\r\nconst UNITS = 'metric';\r\nconst OPEN_WEATHER_MAP_URL = 'http://api.openweathermap.org/data/2.5/weather?' +\r\n    'appid=' + API_KEY + '&' +\r\n    'units=' + UNITS;\r\n\r\nmodule.exports = {\r\n    getTemperature: function (location) {\r\n        // Encode location variable properly for the browser\r\n        var encodedLocation = encodeURIComponent(location);\r\n        // Template strings\r\n        // Can eject variables into the template string\r\n        var requestUrl = `${OPEN_WEATHER_MAP_URL}&q=${encodedLocation}`;\r\n\r\n        // return to chain the promises because the first time we call .then we are parsing out the information\r\n        return axios.get(requestUrl).then(\r\n            function (response) {\r\n                // Success\r\n                // debugger;\r\n                if (response.data.cod && response.data.message) {\r\n                    // Properly catch all errors\r\n                    throw new Error('Success in call but error in result: ' + response.data.message);\r\n                } else {\r\n                    // main.temp because that's the JSON data returned by the API\r\n                    return response.data.main.temp;\r\n                }\r\n            },\r\n            function (response) {\r\n                // Error\r\n                // debugger;\r\n                throw new Error('Error in call: ' + response);\r\n            }\r\n        );\r\n    }\r\n}"]}